version: '3.7'

networks:
  common:
    driver: bridge

volumes:
  postgres:
    driver: local

services:
  php:
    restart: always
    build: ./docker/php
    image: artisan:latest
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "8000:8000"
    networks:
      - common
    depends_on:
      gotify:
        condition: service_started
      postgres:
        condition: service_started
      composer:
        condition: service_completed_successfully

  notifications:
    restart: always
    image: artisan:latest
    command:
      - "notification"
    volumes:
      - ./:/var/www
    networks:
      - common
    depends_on:
      php:
        condition: service_started

  composer:
    restart: on-failure
    image: composer
    command: composer install
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - common

  postgres:
    restart: always
    build:
      context: ./docker/postgres
      args:
        DB_PORT: ${DB_PORT}
        DB_DATABASE: ${DB_DATABASE}
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./docker/postgres/config:/etc/postgres
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    command: postgres -c config_file=/etc/postgres/postgresql.conf
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 127.0.0.1:${DB_PORT}:${DB_PORT}
    networks:
      - common

  redis:
    restart: always
    image: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - common


  gotify:
    restart: always
    image: gotify/server
    ports:
      - 9191:80
      - 9193:9193
    environment:
      - GOTIFY_DEFAULTUSER_NAME=${GOTIFY_USER}
      - GOTIFY_DEFAULTUSER_PASS=${GOTIFY_PASS}
    volumes:
      - "./docker/gotify/data:/app/data"
    networks:
      - common


  mailhog:
    restart: always
    build: ./docker/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - common
